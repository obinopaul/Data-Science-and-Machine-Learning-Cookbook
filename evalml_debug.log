07/05/2023 09:20:00 AM - INFO - automl_search.py: Using default limit of max_batches=1.

07/05/2023 09:20:00 AM - WARNING - automl_search.py: `X` passed was not a DataTable. EvalML will try to convert the input as a Woodwork DataTable and types will be inferred. To control this behavior, please pass in a Woodwork DataTable instead.
07/05/2023 09:20:00 AM - WARNING - automl_search.py: `y` passed was not a DataColumn. EvalML will try to convert the input as a Woodwork DataTable and types will be inferred. To control this behavior, please pass in a Woodwork DataTable instead.
07/05/2023 09:20:00 AM - INFO - automl_search.py: Generating pipelines to search over...
07/05/2023 09:20:00 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:00 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - automl_search.py: allowed_estimators set to ['Decision Tree Regressor.', 'Extra Trees Regressor', 'XGBoost Regressor', 'CatBoost Regressor', 'Random Forest Regressor']
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:01 AM - DEBUG - automl_search.py: allowed_pipelines set to ['Decision Tree Regressor. w/ Imputer', 'Extra Trees Regressor w/ Imputer', 'XGBoost Regressor w/ Imputer', 'CatBoost Regressor w/ Imputer', 'Random Forest Regressor w/ Imputer']
07/05/2023 09:20:01 AM - DEBUG - automl_search.py: allowed_model_families set to [ModelFamily.CATBOOST, ModelFamily.EXTRA_TREES, ModelFamily.RANDOM_FOREST, ModelFamily.XGBOOST, ModelFamily.DECISION_TREE]
07/05/2023 09:20:01 AM - INFO - logger.py: *****************************
07/05/2023 09:20:01 AM - INFO - logger.py: * Beginning pipeline search *
07/05/2023 09:20:01 AM - INFO - logger.py: *****************************
07/05/2023 09:20:01 AM - INFO - logger.py: 
07/05/2023 09:20:01 AM - INFO - automl_search.py: Optimizing for R2. 
07/05/2023 09:20:01 AM - INFO - automl_search.py: Greater score is better.

07/05/2023 09:20:01 AM - INFO - automl_search.py: Searching up to 1 batches for a total of 6 pipelines. 
07/05/2023 09:20:01 AM - INFO - automl_search.py: Allowed model families: catboost, extra_trees, random_forest, xgboost, decision_tree

07/05/2023 09:20:04 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:04 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:04 AM - INFO - logger.py: Batch 1: (1/6) Mean Baseline Regression Pipeline        Elapsed:00:00
07/05/2023 09:20:04 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:20:04 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:04 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:20:04 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:04 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: 			Fold 0: finished training
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: 			Fold 0: Scoring trained pipeline
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: 			Fold 0: R2 score: -2.121
07/05/2023 09:20:04 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:04 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:20:04 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:04 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: 			Fold 1: finished training
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: 			Fold 1: Scoring trained pipeline
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: 			Fold 1: R2 score: nan
07/05/2023 09:20:04 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:04 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:20:04 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:04 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: 			Fold 2: finished training
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: 			Fold 2: Scoring trained pipeline
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: 			Fold 2: R2 score: nan
07/05/2023 09:20:04 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: -2.121
07/05/2023 09:20:04 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:20:04 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: Evaluating pipeline Decision Tree Regressor. w/ Imputer
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: Pipeline parameters: {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Decision Tree Regressor.': {'criterion': 'mse', 'max_features': 'auto', 'max_depth': 6, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0}}
07/05/2023 09:20:04 AM - INFO - logger.py: Batch 1: (2/6) Decision Tree Regressor. w/ Imputer      Elapsed:00:00
07/05/2023 09:20:04 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:20:04 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:20:05 AM - INFO - callbacks.py: 			Fold 0: Encountered an error.
07/05/2023 09:20:05 AM - INFO - callbacks.py: 			Fold 0: All scores will be replaced with nan.
07/05/2023 09:20:05 AM - INFO - callbacks.py: 			Fold 0: Please check c:\Users\Cornel\Documents\GitHub\Data-Science-and-Machine-Learning-Cookbook\evalml_debug.log for the current hyperparameters and stack trace.
07/05/2023 09:20:05 AM - DEBUG - callbacks.py: 			Fold 0: Hyperparameters:
	{'Imputer': {'categorical_impute_strategy': ['most_frequent'], 'numeric_impute_strategy': ['mean', 'median', 'most_frequent']}, 'Decision Tree Regressor.': {'criterion': ['mse', 'friedman_mse', 'mae'], 'max_features': ['auto', 'sqrt', 'log2'], 'max_depth': Integer(low=4, high=10, prior='uniform', transform='identity')}}
07/05/2023 09:20:05 AM - INFO - callbacks.py: 			Fold 0: Exception during automl search: The 'criterion' parameter of DecisionTreeRegressor must be a str among {'squared_error', 'absolute_error', 'friedman_mse', 'poisson'}. Got 'mse' instead.
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:20:05 AM - INFO - callbacks.py: 			Fold 1: Encountered an error.
07/05/2023 09:20:05 AM - INFO - callbacks.py: 			Fold 1: All scores will be replaced with nan.
07/05/2023 09:20:05 AM - INFO - callbacks.py: 			Fold 1: Please check c:\Users\Cornel\Documents\GitHub\Data-Science-and-Machine-Learning-Cookbook\evalml_debug.log for the current hyperparameters and stack trace.
07/05/2023 09:20:05 AM - DEBUG - callbacks.py: 			Fold 1: Hyperparameters:
	{'Imputer': {'categorical_impute_strategy': ['most_frequent'], 'numeric_impute_strategy': ['mean', 'median', 'most_frequent']}, 'Decision Tree Regressor.': {'criterion': ['mse', 'friedman_mse', 'mae'], 'max_features': ['auto', 'sqrt', 'log2'], 'max_depth': Integer(low=4, high=10, prior='uniform', transform='identity')}}
07/05/2023 09:20:05 AM - INFO - callbacks.py: 			Fold 1: Exception during automl search: The 'criterion' parameter of DecisionTreeRegressor must be a str among {'squared_error', 'absolute_error', 'friedman_mse', 'poisson'}. Got 'mse' instead.
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:20:05 AM - INFO - callbacks.py: 			Fold 2: Encountered an error.
07/05/2023 09:20:05 AM - INFO - callbacks.py: 			Fold 2: All scores will be replaced with nan.
07/05/2023 09:20:05 AM - INFO - callbacks.py: 			Fold 2: Please check c:\Users\Cornel\Documents\GitHub\Data-Science-and-Machine-Learning-Cookbook\evalml_debug.log for the current hyperparameters and stack trace.
07/05/2023 09:20:05 AM - DEBUG - callbacks.py: 			Fold 2: Hyperparameters:
	{'Imputer': {'categorical_impute_strategy': ['most_frequent'], 'numeric_impute_strategy': ['mean', 'median', 'most_frequent']}, 'Decision Tree Regressor.': {'criterion': ['mse', 'friedman_mse', 'mae'], 'max_features': ['auto', 'sqrt', 'log2'], 'max_depth': Integer(low=4, high=10, prior='uniform', transform='identity')}}
07/05/2023 09:20:05 AM - INFO - callbacks.py: 			Fold 2: Exception during automl search: The 'criterion' parameter of DecisionTreeRegressor must be a str among {'squared_error', 'absolute_error', 'friedman_mse', 'poisson'}. Got 'mse' instead.
07/05/2023 09:20:05 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: nan
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: Adding results for pipeline Decision Tree Regressor. w/ Imputer
parameters {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Decision Tree Regressor.': {'criterion': 'mse', 'max_features': 'auto', 'max_depth': 6, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0}}
evaluation_results {'cv_data': [{'all_objective_scores': OrderedDict([('R2', nan), ('MSE', nan), ('MAE', nan), ('Root Mean Squared Error', nan), ('# Training', 2), ('# Testing', 2)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', nan), ('MAE', nan), ('Root Mean Squared Error', nan), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', nan), ('MAE', nan), ('Root Mean Squared Error', nan), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}], 'training_time': 0.24190807342529297, 'cv_scores': 0   NaN
1   NaN
2   NaN
dtype: float64, 'cv_score_mean': nan}
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: Adding results complete
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: Evaluating pipeline Extra Trees Regressor w/ Imputer
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: Pipeline parameters: {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Extra Trees Regressor': {'n_estimators': 100, 'max_features': 'auto', 'max_depth': 6, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_jobs': -1}}
07/05/2023 09:20:05 AM - INFO - logger.py: Batch 1: (3/6) Extra Trees Regressor w/ Imputer         Elapsed:00:01
07/05/2023 09:20:05 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 			Fold 0: finished training
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 			Fold 0: Scoring trained pipeline
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 			Fold 0: R2 score: -2.779
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 			Fold 1: finished training
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 			Fold 1: Scoring trained pipeline
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 			Fold 1: R2 score: nan
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:20:05 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 			Fold 2: finished training
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 			Fold 2: Scoring trained pipeline
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 			Fold 2: R2 score: nan
07/05/2023 09:20:06 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: -2.779
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: Adding results for pipeline Extra Trees Regressor w/ Imputer
parameters {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Extra Trees Regressor': {'n_estimators': 100, 'max_features': 'auto', 'max_depth': 6, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_jobs': -1}}
evaluation_results {'cv_data': [{'all_objective_scores': OrderedDict([('R2', -2.779371224732488), ('MSE', 0.003504242448000026), ('MAE', 0.054432000000000216), ('Root Mean Squared Error', 0.059196642202071104), ('# Training', 2), ('# Testing', 2)]), 'score': -2.779371224732488, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.00019502122499999162), ('MAE', 0.0139649999999997), ('Root Mean Squared Error', 0.0139649999999997), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.00754396473599994), ('MAE', 0.08685599999999966), ('Root Mean Squared Error', 0.08685599999999966), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}], 'training_time': 1.032165765762329, 'cv_scores': 0   -2.779371
1         NaN
2         NaN
dtype: float64, 'cv_score_mean': -2.779371224732488}
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: Adding results complete
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: Evaluating pipeline XGBoost Regressor w/ Imputer
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: Pipeline parameters: {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'XGBoost Regressor': {'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'n_estimators': 100}}
07/05/2023 09:20:06 AM - INFO - logger.py: Batch 1: (4/6) XGBoost Regressor w/ Imputer             Elapsed:00:02
07/05/2023 09:20:06 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 			Fold 0: finished training
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 			Fold 0: Scoring trained pipeline
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 			Fold 0: R2 score: -1.219
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 			Fold 1: finished training
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 			Fold 1: Scoring trained pipeline
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 			Fold 1: R2 score: nan
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 			Fold 2: finished training
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 			Fold 2: Scoring trained pipeline
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: 			Fold 2: R2 score: nan
07/05/2023 09:20:06 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: -1.219
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: Adding results for pipeline XGBoost Regressor w/ Imputer
parameters {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'XGBoost Regressor': {'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'n_estimators': 100}}
evaluation_results {'cv_data': [{'all_objective_scores': OrderedDict([('R2', -1.2191658913022412), ('MSE', 0.005177069916160085), ('MAE', 0.07117840306758881), ('Root Mean Squared Error', 0.07195185832318776), ('# Training', 2), ('# Testing', 2)]), 'score': -1.2191658913022412, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.006007988124810679), ('MAE', 0.07751121289730073), ('Root Mean Squared Error', 0.07751121289730073), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.005973221416816308), ('MAE', 0.07728661861419678), ('Root Mean Squared Error', 0.07728661861419678), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}], 'training_time': 0.6797654628753662, 'cv_scores': 0   -1.219166
1         NaN
2         NaN
dtype: float64, 'cv_score_mean': -1.2191658913022412}
07/05/2023 09:20:06 AM - DEBUG - automl_search.py: Adding results complete
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: Evaluating pipeline CatBoost Regressor w/ Imputer
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: Pipeline parameters: {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'CatBoost Regressor': {'n_estimators': 10, 'eta': 0.03, 'max_depth': 6, 'bootstrap_type': None, 'silent': False, 'allow_writing_files': False}}
07/05/2023 09:20:07 AM - INFO - logger.py: Batch 1: (5/6) CatBoost Regressor w/ Imputer            Elapsed:00:02
07/05/2023 09:20:07 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 			Fold 0: finished training
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 			Fold 0: Scoring trained pipeline
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 			Fold 0: R2 score: -3.000
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 			Fold 1: finished training
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 			Fold 1: Scoring trained pipeline
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 			Fold 1: R2 score: nan
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 			Fold 2: finished training
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 			Fold 2: Scoring trained pipeline
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 			Fold 2: R2 score: nan
07/05/2023 09:20:07 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: -3.000
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: Adding results for pipeline CatBoost Regressor w/ Imputer
parameters {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'CatBoost Regressor': {'n_estimators': 10, 'eta': 0.03, 'max_depth': 6, 'bootstrap_type': None, 'silent': False, 'allow_writing_files': False}}
evaluation_results {'cv_data': [{'all_objective_scores': OrderedDict([('R2', -3.0004095169512066), ('MSE', 0.006037908093148587), ('MAE', 0.06788102716706877), ('Root Mean Squared Error', 0.07770397733159215), ('# Training', 2), ('# Testing', 2)]), 'score': -3.0004095169512066, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.0120501176390617), ('MAE', 0.1097730278304361), ('Root Mean Squared Error', 0.1097730278304361), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.00023504313319888743), ('MAE', 0.01533111650203231), ('Root Mean Squared Error', 0.01533111650203231), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}], 'training_time': 0.5581388473510742, 'cv_scores': 0   -3.00041
1        NaN
2        NaN
dtype: float64, 'cv_score_mean': -3.0004095169512066}
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: Adding results complete
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: Evaluating pipeline Random Forest Regressor w/ Imputer
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: Pipeline parameters: {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Random Forest Regressor': {'n_estimators': 100, 'max_depth': 6, 'n_jobs': -1}}
07/05/2023 09:20:07 AM - INFO - logger.py: Batch 1: (6/6) Random Forest Regressor w/ Imputer       Elapsed:00:03
07/05/2023 09:20:07 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 			Fold 0: finished training
07/05/2023 09:20:07 AM - DEBUG - automl_search.py: 			Fold 0: Scoring trained pipeline
07/05/2023 09:20:08 AM - DEBUG - automl_search.py: 			Fold 0: R2 score: -0.858
07/05/2023 09:20:08 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:20:08 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:20:08 AM - DEBUG - automl_search.py: 			Fold 1: finished training
07/05/2023 09:20:08 AM - DEBUG - automl_search.py: 			Fold 1: Scoring trained pipeline
07/05/2023 09:20:08 AM - DEBUG - automl_search.py: 			Fold 1: R2 score: nan
07/05/2023 09:20:08 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:20:08 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:20:08 AM - DEBUG - automl_search.py: 			Fold 2: finished training
07/05/2023 09:20:08 AM - DEBUG - automl_search.py: 			Fold 2: Scoring trained pipeline
07/05/2023 09:20:08 AM - DEBUG - automl_search.py: 			Fold 2: R2 score: nan
07/05/2023 09:20:08 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: -0.858
07/05/2023 09:20:08 AM - DEBUG - automl_search.py: Adding results for pipeline Random Forest Regressor w/ Imputer
parameters {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Random Forest Regressor': {'n_estimators': 100, 'max_depth': 6, 'n_jobs': -1}}
evaluation_results {'cv_data': [{'all_objective_scores': OrderedDict([('R2', -0.85793005671076), ('MSE', 0.004334346449999965), ('MAE', 0.05247899999999965), ('Root Mean Squared Error', 0.0658357535842035), ('# Training', 2), ('# Testing', 2)]), 'score': -0.85793005671076, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.005715360000000046), ('MAE', 0.0756000000000003), ('Root Mean Squared Error', 0.0756000000000003), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 3.120339599999699e-05), ('MAE', 0.00558599999999973), ('Root Mean Squared Error', 0.00558599999999973), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}], 'training_time': 1.080122470855713, 'cv_scores': 0   -0.85793
1        NaN
2        NaN
dtype: float64, 'cv_score_mean': -0.85793005671076}
07/05/2023 09:20:08 AM - DEBUG - automl_search.py: Adding results complete
07/05/2023 09:20:08 AM - INFO - automl_search.py: 
Search finished after 00:04            
07/05/2023 09:20:08 AM - INFO - automl_search.py: Best pipeline: Random Forest Regressor w/ Imputer
07/05/2023 09:20:08 AM - INFO - automl_search.py: Best pipeline R2: -0.857930
07/05/2023 09:27:26 AM - INFO - logger.py: **************************************
07/05/2023 09:27:26 AM - INFO - logger.py: * Random Forest Regressor w/ Imputer *
07/05/2023 09:27:26 AM - INFO - logger.py: **************************************
07/05/2023 09:27:26 AM - INFO - logger.py: 
07/05/2023 09:27:26 AM - INFO - pipeline_base.py: Problem Type: regression
07/05/2023 09:27:26 AM - INFO - pipeline_base.py: Model Family: Random Forest
07/05/2023 09:27:26 AM - INFO - logger.py: 
07/05/2023 09:27:26 AM - INFO - logger.py: Pipeline Steps
07/05/2023 09:27:26 AM - INFO - logger.py: ==============
07/05/2023 09:27:26 AM - INFO - pipeline_base.py: 1. Imputer
07/05/2023 09:27:26 AM - INFO - component_base.py: 	 * categorical_impute_strategy : most_frequent
07/05/2023 09:27:26 AM - INFO - component_base.py: 	 * numeric_impute_strategy : mean
07/05/2023 09:27:26 AM - INFO - component_base.py: 	 * categorical_fill_value : None
07/05/2023 09:27:26 AM - INFO - component_base.py: 	 * numeric_fill_value : None
07/05/2023 09:27:26 AM - INFO - pipeline_base.py: 2. Random Forest Regressor
07/05/2023 09:27:26 AM - INFO - component_base.py: 	 * n_estimators : 100
07/05/2023 09:27:26 AM - INFO - component_base.py: 	 * max_depth : 6
07/05/2023 09:27:26 AM - INFO - component_base.py: 	 * n_jobs : -1
07/05/2023 09:27:26 AM - INFO - logger.py: 
07/05/2023 09:27:26 AM - INFO - logger.py: Training
07/05/2023 09:27:26 AM - INFO - logger.py: ========
07/05/2023 09:27:26 AM - INFO - automl_search.py: Training for regression problems.
07/05/2023 09:27:26 AM - INFO - automl_search.py: Total training time (including CV): 1.1 seconds
07/05/2023 09:27:26 AM - INFO - logger.py: 
07/05/2023 09:27:26 AM - INFO - logger.py: Cross Validation
07/05/2023 09:27:26 AM - INFO - logger.py: ----------------
07/05/2023 09:27:26 AM - INFO - automl_search.py:                 R2   MSE   MAE  Root Mean Squared Error # Training # Testing
0           -0.858 0.004 0.052                    0.066      2.000     2.000
1                - 0.006 0.076                    0.076      3.000     1.000
2                - 0.000 0.006                    0.006      3.000     1.000
mean        -0.858 0.003 0.045                    0.049          -         -
std              - 0.003 0.036                    0.038          -         -
coef of var      - 0.882 0.801                    0.774          -         -
07/05/2023 09:32:37 AM - INFO - automl_search.py: Using default limit of max_batches=1.

07/05/2023 09:32:37 AM - WARNING - automl_search.py: `X` passed was not a DataTable. EvalML will try to convert the input as a Woodwork DataTable and types will be inferred. To control this behavior, please pass in a Woodwork DataTable instead.
07/05/2023 09:32:37 AM - WARNING - automl_search.py: `y` passed was not a DataColumn. EvalML will try to convert the input as a Woodwork DataTable and types will be inferred. To control this behavior, please pass in a Woodwork DataTable instead.
07/05/2023 09:32:37 AM - INFO - automl_search.py: Generating pipelines to search over...
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - automl_search.py: allowed_estimators set to ['Decision Tree Regressor.', 'Extra Trees Regressor', 'XGBoost Regressor', 'CatBoost Regressor', 'Random Forest Regressor']
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - automl_search.py: allowed_pipelines set to ['Decision Tree Regressor. w/ Imputer', 'Extra Trees Regressor w/ Imputer', 'XGBoost Regressor w/ Imputer', 'CatBoost Regressor w/ Imputer', 'Random Forest Regressor w/ Imputer']
07/05/2023 09:32:37 AM - DEBUG - automl_search.py: allowed_model_families set to [ModelFamily.CATBOOST, ModelFamily.EXTRA_TREES, ModelFamily.RANDOM_FOREST, ModelFamily.XGBOOST, ModelFamily.DECISION_TREE]
07/05/2023 09:32:37 AM - INFO - logger.py: *****************************
07/05/2023 09:32:37 AM - INFO - logger.py: * Beginning pipeline search *
07/05/2023 09:32:37 AM - INFO - logger.py: *****************************
07/05/2023 09:32:37 AM - INFO - logger.py: 
07/05/2023 09:32:37 AM - INFO - automl_search.py: Optimizing for R2. 
07/05/2023 09:32:37 AM - INFO - automl_search.py: Greater score is better.

07/05/2023 09:32:37 AM - INFO - automl_search.py: Searching up to 1 batches for a total of 6 pipelines. 
07/05/2023 09:32:37 AM - INFO - automl_search.py: Allowed model families: catboost, extra_trees, random_forest, xgboost, decision_tree

07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - INFO - logger.py: Batch 1: (1/6) Mean Baseline Regression Pipeline        Elapsed:00:00
07/05/2023 09:32:37 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:32:37 AM - DEBUG - automl_search.py: 			Fold 0: finished training
07/05/2023 09:32:37 AM - DEBUG - automl_search.py: 			Fold 0: Scoring trained pipeline
07/05/2023 09:32:37 AM - DEBUG - automl_search.py: 			Fold 0: R2 score: -2.121
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:32:37 AM - DEBUG - automl_search.py: 			Fold 1: finished training
07/05/2023 09:32:37 AM - DEBUG - automl_search.py: 			Fold 1: Scoring trained pipeline
07/05/2023 09:32:37 AM - DEBUG - automl_search.py: 			Fold 1: R2 score: nan
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:37 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 			Fold 2: finished training
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 			Fold 2: Scoring trained pipeline
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 			Fold 2: R2 score: nan
07/05/2023 09:32:38 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: -2.121
07/05/2023 09:32:38 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:32:38 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: Evaluating pipeline Decision Tree Regressor. w/ Imputer
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: Pipeline parameters: {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Decision Tree Regressor.': {'criterion': 'mse', 'max_features': 'auto', 'max_depth': 6, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0}}
07/05/2023 09:32:38 AM - INFO - logger.py: Batch 1: (2/6) Decision Tree Regressor. w/ Imputer      Elapsed:00:00
07/05/2023 09:32:38 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:32:38 AM - INFO - callbacks.py: 			Fold 0: Encountered an error.
07/05/2023 09:32:38 AM - INFO - callbacks.py: 			Fold 0: All scores will be replaced with nan.
07/05/2023 09:32:38 AM - INFO - callbacks.py: 			Fold 0: Please check c:\Users\Cornel\Documents\GitHub\Data-Science-and-Machine-Learning-Cookbook\evalml_debug.log for the current hyperparameters and stack trace.
07/05/2023 09:32:38 AM - DEBUG - callbacks.py: 			Fold 0: Hyperparameters:
	{'Imputer': {'categorical_impute_strategy': ['most_frequent'], 'numeric_impute_strategy': ['mean', 'median', 'most_frequent']}, 'Decision Tree Regressor.': {'criterion': ['mse', 'friedman_mse', 'mae'], 'max_features': ['auto', 'sqrt', 'log2'], 'max_depth': Integer(low=4, high=10, prior='uniform', transform='identity')}}
07/05/2023 09:32:38 AM - INFO - callbacks.py: 			Fold 0: Exception during automl search: The 'criterion' parameter of DecisionTreeRegressor must be a str among {'squared_error', 'absolute_error', 'friedman_mse', 'poisson'}. Got 'mse' instead.
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:32:38 AM - INFO - callbacks.py: 			Fold 1: Encountered an error.
07/05/2023 09:32:38 AM - INFO - callbacks.py: 			Fold 1: All scores will be replaced with nan.
07/05/2023 09:32:38 AM - INFO - callbacks.py: 			Fold 1: Please check c:\Users\Cornel\Documents\GitHub\Data-Science-and-Machine-Learning-Cookbook\evalml_debug.log for the current hyperparameters and stack trace.
07/05/2023 09:32:38 AM - DEBUG - callbacks.py: 			Fold 1: Hyperparameters:
	{'Imputer': {'categorical_impute_strategy': ['most_frequent'], 'numeric_impute_strategy': ['mean', 'median', 'most_frequent']}, 'Decision Tree Regressor.': {'criterion': ['mse', 'friedman_mse', 'mae'], 'max_features': ['auto', 'sqrt', 'log2'], 'max_depth': Integer(low=4, high=10, prior='uniform', transform='identity')}}
07/05/2023 09:32:38 AM - INFO - callbacks.py: 			Fold 1: Exception during automl search: The 'criterion' parameter of DecisionTreeRegressor must be a str among {'squared_error', 'absolute_error', 'friedman_mse', 'poisson'}. Got 'mse' instead.
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:32:38 AM - INFO - callbacks.py: 			Fold 2: Encountered an error.
07/05/2023 09:32:38 AM - INFO - callbacks.py: 			Fold 2: All scores will be replaced with nan.
07/05/2023 09:32:38 AM - INFO - callbacks.py: 			Fold 2: Please check c:\Users\Cornel\Documents\GitHub\Data-Science-and-Machine-Learning-Cookbook\evalml_debug.log for the current hyperparameters and stack trace.
07/05/2023 09:32:38 AM - DEBUG - callbacks.py: 			Fold 2: Hyperparameters:
	{'Imputer': {'categorical_impute_strategy': ['most_frequent'], 'numeric_impute_strategy': ['mean', 'median', 'most_frequent']}, 'Decision Tree Regressor.': {'criterion': ['mse', 'friedman_mse', 'mae'], 'max_features': ['auto', 'sqrt', 'log2'], 'max_depth': Integer(low=4, high=10, prior='uniform', transform='identity')}}
07/05/2023 09:32:38 AM - INFO - callbacks.py: 			Fold 2: Exception during automl search: The 'criterion' parameter of DecisionTreeRegressor must be a str among {'squared_error', 'absolute_error', 'friedman_mse', 'poisson'}. Got 'mse' instead.
07/05/2023 09:32:38 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: nan
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: Adding results for pipeline Decision Tree Regressor. w/ Imputer
parameters {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Decision Tree Regressor.': {'criterion': 'mse', 'max_features': 'auto', 'max_depth': 6, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0}}
evaluation_results {'cv_data': [{'all_objective_scores': OrderedDict([('R2', nan), ('MSE', nan), ('MAE', nan), ('Root Mean Squared Error', nan), ('# Training', 2), ('# Testing', 2)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', nan), ('MAE', nan), ('Root Mean Squared Error', nan), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', nan), ('MAE', nan), ('Root Mean Squared Error', nan), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}], 'training_time': 0.23941922187805176, 'cv_scores': 0   NaN
1   NaN
2   NaN
dtype: float64, 'cv_score_mean': nan}
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: Adding results complete
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: Evaluating pipeline Extra Trees Regressor w/ Imputer
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: Pipeline parameters: {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Extra Trees Regressor': {'n_estimators': 100, 'max_features': 'auto', 'max_depth': 6, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_jobs': -1}}
07/05/2023 09:32:38 AM - INFO - logger.py: Batch 1: (3/6) Extra Trees Regressor w/ Imputer         Elapsed:00:00
07/05/2023 09:32:38 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 			Fold 0: finished training
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 			Fold 0: Scoring trained pipeline
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 			Fold 0: R2 score: -2.779
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:32:38 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 1: finished training
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 1: Scoring trained pipeline
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 1: R2 score: nan
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 2: finished training
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 2: Scoring trained pipeline
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 2: R2 score: nan
07/05/2023 09:32:39 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: -2.779
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: Adding results for pipeline Extra Trees Regressor w/ Imputer
parameters {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Extra Trees Regressor': {'n_estimators': 100, 'max_features': 'auto', 'max_depth': 6, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_jobs': -1}}
evaluation_results {'cv_data': [{'all_objective_scores': OrderedDict([('R2', -2.779371224732488), ('MSE', 0.003504242448000026), ('MAE', 0.054432000000000216), ('Root Mean Squared Error', 0.059196642202071104), ('# Training', 2), ('# Testing', 2)]), 'score': -2.779371224732488, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.00019502122499999238), ('MAE', 0.013964999999999728), ('Root Mean Squared Error', 0.013964999999999728), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.00754396473599994), ('MAE', 0.08685599999999966), ('Root Mean Squared Error', 0.08685599999999966), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}], 'training_time': 0.925832986831665, 'cv_scores': 0   -2.779371
1         NaN
2         NaN
dtype: float64, 'cv_score_mean': -2.779371224732488}
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: Adding results complete
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: Evaluating pipeline XGBoost Regressor w/ Imputer
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: Pipeline parameters: {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'XGBoost Regressor': {'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'n_estimators': 100}}
07/05/2023 09:32:39 AM - INFO - logger.py: Batch 1: (4/6) XGBoost Regressor w/ Imputer             Elapsed:00:01
07/05/2023 09:32:39 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 0: finished training
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 0: Scoring trained pipeline
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 0: R2 score: -1.219
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 1: finished training
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 1: Scoring trained pipeline
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 1: R2 score: nan
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 2: finished training
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 2: Scoring trained pipeline
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 2: R2 score: nan
07/05/2023 09:32:39 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: -1.219
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: Adding results for pipeline XGBoost Regressor w/ Imputer
parameters {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'XGBoost Regressor': {'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'n_estimators': 100}}
evaluation_results {'cv_data': [{'all_objective_scores': OrderedDict([('R2', -1.2191658913022412), ('MSE', 0.005177069916160085), ('MAE', 0.07117840306758881), ('Root Mean Squared Error', 0.07195185832318776), ('# Training', 2), ('# Testing', 2)]), 'score': -1.2191658913022412, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.006007988124810679), ('MAE', 0.07751121289730073), ('Root Mean Squared Error', 0.07751121289730073), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.005973221416816308), ('MAE', 0.07728661861419678), ('Root Mean Squared Error', 0.07728661861419678), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}], 'training_time': 0.5158202648162842, 'cv_scores': 0   -1.219166
1         NaN
2         NaN
dtype: float64, 'cv_score_mean': -1.2191658913022412}
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: Adding results complete
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: Evaluating pipeline CatBoost Regressor w/ Imputer
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: Pipeline parameters: {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'CatBoost Regressor': {'n_estimators': 10, 'eta': 0.03, 'max_depth': 6, 'bootstrap_type': None, 'silent': False, 'allow_writing_files': False}}
07/05/2023 09:32:39 AM - INFO - logger.py: Batch 1: (5/6) CatBoost Regressor w/ Imputer            Elapsed:00:02
07/05/2023 09:32:39 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 0: finished training
07/05/2023 09:32:39 AM - DEBUG - automl_search.py: 			Fold 0: Scoring trained pipeline
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 			Fold 0: R2 score: -3.000
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 			Fold 1: finished training
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 			Fold 1: Scoring trained pipeline
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 			Fold 1: R2 score: nan
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 			Fold 2: finished training
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 			Fold 2: Scoring trained pipeline
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 			Fold 2: R2 score: nan
07/05/2023 09:32:40 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: -3.000
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: Adding results for pipeline CatBoost Regressor w/ Imputer
parameters {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'CatBoost Regressor': {'n_estimators': 10, 'eta': 0.03, 'max_depth': 6, 'bootstrap_type': None, 'silent': False, 'allow_writing_files': False}}
evaluation_results {'cv_data': [{'all_objective_scores': OrderedDict([('R2', -3.0004095169512066), ('MSE', 0.006037908093148587), ('MAE', 0.06788102716706877), ('Root Mean Squared Error', 0.07770397733159215), ('# Training', 2), ('# Testing', 2)]), 'score': -3.0004095169512066, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.0120501176390617), ('MAE', 0.1097730278304361), ('Root Mean Squared Error', 0.1097730278304361), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.00023504313319888743), ('MAE', 0.01533111650203231), ('Root Mean Squared Error', 0.01533111650203231), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}], 'training_time': 0.41081833839416504, 'cv_scores': 0   -3.00041
1        NaN
2        NaN
dtype: float64, 'cv_score_mean': -3.0004095169512066}
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: Adding results complete
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: Evaluating pipeline Random Forest Regressor w/ Imputer
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: Pipeline parameters: {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Random Forest Regressor': {'n_estimators': 100, 'max_depth': 6, 'n_jobs': -1}}
07/05/2023 09:32:40 AM - INFO - logger.py: Batch 1: (6/6) Random Forest Regressor w/ Imputer       Elapsed:00:02
07/05/2023 09:32:40 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 			Fold 0: finished training
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 			Fold 0: Scoring trained pipeline
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 			Fold 0: R2 score: -0.858
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:32:40 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:32:41 AM - DEBUG - automl_search.py: 			Fold 1: finished training
07/05/2023 09:32:41 AM - DEBUG - automl_search.py: 			Fold 1: Scoring trained pipeline
07/05/2023 09:32:41 AM - DEBUG - automl_search.py: 			Fold 1: R2 score: nan
07/05/2023 09:32:41 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:32:41 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:32:41 AM - DEBUG - automl_search.py: 			Fold 2: finished training
07/05/2023 09:32:41 AM - DEBUG - automl_search.py: 			Fold 2: Scoring trained pipeline
07/05/2023 09:32:41 AM - DEBUG - automl_search.py: 			Fold 2: R2 score: nan
07/05/2023 09:32:41 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: -0.858
07/05/2023 09:32:41 AM - DEBUG - automl_search.py: Adding results for pipeline Random Forest Regressor w/ Imputer
parameters {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Random Forest Regressor': {'n_estimators': 100, 'max_depth': 6, 'n_jobs': -1}}
evaluation_results {'cv_data': [{'all_objective_scores': OrderedDict([('R2', -0.85793005671076), ('MSE', 0.004334346449999965), ('MAE', 0.05247899999999965), ('Root Mean Squared Error', 0.0658357535842035), ('# Training', 2), ('# Testing', 2)]), 'score': -0.85793005671076, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.005715360000000046), ('MAE', 0.0756000000000003), ('Root Mean Squared Error', 0.0756000000000003), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 3.120339599999699e-05), ('MAE', 0.00558599999999973), ('Root Mean Squared Error', 0.00558599999999973), ('# Training', 3), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}], 'training_time': 1.1365039348602295, 'cv_scores': 0   -0.85793
1        NaN
2        NaN
dtype: float64, 'cv_score_mean': -0.85793005671076}
07/05/2023 09:32:41 AM - DEBUG - automl_search.py: Adding results complete
07/05/2023 09:32:41 AM - INFO - automl_search.py: 
Search finished after 00:03            
07/05/2023 09:32:41 AM - INFO - automl_search.py: Best pipeline: Random Forest Regressor w/ Imputer
07/05/2023 09:32:41 AM - INFO - automl_search.py: Best pipeline R2: -0.857930
07/05/2023 09:33:46 AM - INFO - automl_search.py: Using default limit of max_batches=1.

07/05/2023 09:33:46 AM - WARNING - automl_search.py: `X` passed was not a DataTable. EvalML will try to convert the input as a Woodwork DataTable and types will be inferred. To control this behavior, please pass in a Woodwork DataTable instead.
07/05/2023 09:33:46 AM - WARNING - automl_search.py: `y` passed was not a DataColumn. EvalML will try to convert the input as a Woodwork DataTable and types will be inferred. To control this behavior, please pass in a Woodwork DataTable instead.
07/05/2023 09:33:46 AM - WARNING - automl_search.py: {'message': "Column '0' is 95.0% or more correlated with the target", 'data_check_name': 'TargetLeakageDataCheck', 'level': 'warning', 'code': 'TARGET_LEAKAGE', 'details': {'column': 0}}
07/05/2023 09:33:46 AM - WARNING - automl_search.py: {'message': "Column '1' is 95.0% or more correlated with the target", 'data_check_name': 'TargetLeakageDataCheck', 'level': 'warning', 'code': 'TARGET_LEAKAGE', 'details': {'column': 1}}
07/05/2023 09:33:46 AM - INFO - automl_search.py: Generating pipelines to search over...
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - automl_search.py: allowed_estimators set to ['Decision Tree Regressor.', 'Extra Trees Regressor', 'XGBoost Regressor', 'CatBoost Regressor', 'Random Forest Regressor']
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - automl_search.py: allowed_pipelines set to ['Decision Tree Regressor. w/ Imputer', 'Extra Trees Regressor w/ Imputer', 'XGBoost Regressor w/ Imputer', 'CatBoost Regressor w/ Imputer', 'Random Forest Regressor w/ Imputer']
07/05/2023 09:33:46 AM - DEBUG - automl_search.py: allowed_model_families set to [ModelFamily.CATBOOST, ModelFamily.EXTRA_TREES, ModelFamily.RANDOM_FOREST, ModelFamily.XGBOOST, ModelFamily.DECISION_TREE]
07/05/2023 09:33:46 AM - INFO - logger.py: *****************************
07/05/2023 09:33:46 AM - INFO - logger.py: * Beginning pipeline search *
07/05/2023 09:33:46 AM - INFO - logger.py: *****************************
07/05/2023 09:33:46 AM - INFO - logger.py: 
07/05/2023 09:33:46 AM - INFO - automl_search.py: Optimizing for R2. 
07/05/2023 09:33:46 AM - INFO - automl_search.py: Greater score is better.

07/05/2023 09:33:46 AM - INFO - automl_search.py: Searching up to 1 batches for a total of 6 pipelines. 
07/05/2023 09:33:46 AM - INFO - automl_search.py: Allowed model families: catboost, extra_trees, random_forest, xgboost, decision_tree

07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - INFO - logger.py: Batch 1: (1/6) Mean Baseline Regression Pipeline        Elapsed:00:00
07/05/2023 09:33:46 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:46 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:33:47 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:47 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 0: finished training
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 0: Scoring trained pipeline
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 0: R2 score: nan
07/05/2023 09:33:47 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:47 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:33:47 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:47 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 1: finished training
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 1: Scoring trained pipeline
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 1: R2 score: nan
07/05/2023 09:33:47 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:47 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:33:47 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:47 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 2: finished training
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 2: Scoring trained pipeline
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 2: R2 score: nan
07/05/2023 09:33:47 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: nan
07/05/2023 09:33:47 AM - DEBUG - gen_utils.py: Could not import class LinearRegressor in get_importable_subclasses
07/05/2023 09:33:47 AM - DEBUG - gen_utils.py: Could not import class ElasticNetRegressor in get_importable_subclasses
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: Evaluating pipeline Decision Tree Regressor. w/ Imputer
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: Pipeline parameters: {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Decision Tree Regressor.': {'criterion': 'mse', 'max_features': 'auto', 'max_depth': 6, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0}}
07/05/2023 09:33:47 AM - INFO - logger.py: Batch 1: (2/6) Decision Tree Regressor. w/ Imputer      Elapsed:00:00
07/05/2023 09:33:47 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:33:47 AM - INFO - callbacks.py: 			Fold 0: Encountered an error.
07/05/2023 09:33:47 AM - INFO - callbacks.py: 			Fold 0: All scores will be replaced with nan.
07/05/2023 09:33:47 AM - INFO - callbacks.py: 			Fold 0: Please check c:\Users\Cornel\Documents\GitHub\Data-Science-and-Machine-Learning-Cookbook\evalml_debug.log for the current hyperparameters and stack trace.
07/05/2023 09:33:47 AM - DEBUG - callbacks.py: 			Fold 0: Hyperparameters:
	{'Imputer': {'categorical_impute_strategy': ['most_frequent'], 'numeric_impute_strategy': ['mean', 'median', 'most_frequent']}, 'Decision Tree Regressor.': {'criterion': ['mse', 'friedman_mse', 'mae'], 'max_features': ['auto', 'sqrt', 'log2'], 'max_depth': Integer(low=4, high=10, prior='uniform', transform='identity')}}
07/05/2023 09:33:47 AM - INFO - callbacks.py: 			Fold 0: Exception during automl search: The 'criterion' parameter of DecisionTreeRegressor must be a str among {'squared_error', 'absolute_error', 'friedman_mse', 'poisson'}. Got 'mse' instead.
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:33:47 AM - INFO - callbacks.py: 			Fold 1: Encountered an error.
07/05/2023 09:33:47 AM - INFO - callbacks.py: 			Fold 1: All scores will be replaced with nan.
07/05/2023 09:33:47 AM - INFO - callbacks.py: 			Fold 1: Please check c:\Users\Cornel\Documents\GitHub\Data-Science-and-Machine-Learning-Cookbook\evalml_debug.log for the current hyperparameters and stack trace.
07/05/2023 09:33:47 AM - DEBUG - callbacks.py: 			Fold 1: Hyperparameters:
	{'Imputer': {'categorical_impute_strategy': ['most_frequent'], 'numeric_impute_strategy': ['mean', 'median', 'most_frequent']}, 'Decision Tree Regressor.': {'criterion': ['mse', 'friedman_mse', 'mae'], 'max_features': ['auto', 'sqrt', 'log2'], 'max_depth': Integer(low=4, high=10, prior='uniform', transform='identity')}}
07/05/2023 09:33:47 AM - INFO - callbacks.py: 			Fold 1: Exception during automl search: The 'criterion' parameter of DecisionTreeRegressor must be a str among {'squared_error', 'absolute_error', 'friedman_mse', 'poisson'}. Got 'mse' instead.
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:33:47 AM - INFO - callbacks.py: 			Fold 2: Encountered an error.
07/05/2023 09:33:47 AM - INFO - callbacks.py: 			Fold 2: All scores will be replaced with nan.
07/05/2023 09:33:47 AM - INFO - callbacks.py: 			Fold 2: Please check c:\Users\Cornel\Documents\GitHub\Data-Science-and-Machine-Learning-Cookbook\evalml_debug.log for the current hyperparameters and stack trace.
07/05/2023 09:33:47 AM - DEBUG - callbacks.py: 			Fold 2: Hyperparameters:
	{'Imputer': {'categorical_impute_strategy': ['most_frequent'], 'numeric_impute_strategy': ['mean', 'median', 'most_frequent']}, 'Decision Tree Regressor.': {'criterion': ['mse', 'friedman_mse', 'mae'], 'max_features': ['auto', 'sqrt', 'log2'], 'max_depth': Integer(low=4, high=10, prior='uniform', transform='identity')}}
07/05/2023 09:33:47 AM - INFO - callbacks.py: 			Fold 2: Exception during automl search: The 'criterion' parameter of DecisionTreeRegressor must be a str among {'squared_error', 'absolute_error', 'friedman_mse', 'poisson'}. Got 'mse' instead.
07/05/2023 09:33:47 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: nan
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: Adding results for pipeline Decision Tree Regressor. w/ Imputer
parameters {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Decision Tree Regressor.': {'criterion': 'mse', 'max_features': 'auto', 'max_depth': 6, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0}}
evaluation_results {'cv_data': [{'all_objective_scores': OrderedDict([('R2', nan), ('MSE', nan), ('MAE', nan), ('Root Mean Squared Error', nan), ('# Training', 2), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', nan), ('MAE', nan), ('Root Mean Squared Error', nan), ('# Training', 2), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', nan), ('MAE', nan), ('Root Mean Squared Error', nan), ('# Training', 2), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}], 'training_time': 0.15812969207763672, 'cv_scores': 0   NaN
1   NaN
2   NaN
dtype: float64, 'cv_score_mean': nan}
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: Adding results complete
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: Evaluating pipeline Extra Trees Regressor w/ Imputer
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: Pipeline parameters: {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Extra Trees Regressor': {'n_estimators': 100, 'max_features': 'auto', 'max_depth': 6, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_jobs': -1}}
07/05/2023 09:33:47 AM - INFO - logger.py: Batch 1: (3/6) Extra Trees Regressor w/ Imputer         Elapsed:00:00
07/05/2023 09:33:47 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 0: finished training
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 0: Scoring trained pipeline
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 0: R2 score: nan
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 1: finished training
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 1: Scoring trained pipeline
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 1: R2 score: nan
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:33:47 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 			Fold 2: finished training
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 			Fold 2: Scoring trained pipeline
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 			Fold 2: R2 score: nan
07/05/2023 09:33:48 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: nan
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: Adding results for pipeline Extra Trees Regressor w/ Imputer
parameters {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Extra Trees Regressor': {'n_estimators': 100, 'max_features': 'auto', 'max_depth': 6, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_jobs': -1}}
evaluation_results {'cv_data': [{'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.00042008601599998467), ('MAE', 0.020495999999999626), ('Root Mean Squared Error', 0.020495999999999626), ('# Training', 2), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.005526435600000048), ('MAE', 0.07434000000000032), ('Root Mean Squared Error', 0.07434000000000032), ('# Training', 2), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.002290483880999951), ('MAE', 0.047858999999999485), ('Root Mean Squared Error', 0.047858999999999485), ('# Training', 2), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}], 'training_time': 0.8637433052062988, 'cv_scores': 0   NaN
1   NaN
2   NaN
dtype: float64, 'cv_score_mean': nan}
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: Adding results complete
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: Evaluating pipeline XGBoost Regressor w/ Imputer
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: Pipeline parameters: {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'XGBoost Regressor': {'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'n_estimators': 100}}
07/05/2023 09:33:48 AM - INFO - logger.py: Batch 1: (4/6) XGBoost Regressor w/ Imputer             Elapsed:00:01
07/05/2023 09:33:48 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 			Fold 0: finished training
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 			Fold 0: Scoring trained pipeline
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 			Fold 0: R2 score: nan
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 			Fold 1: finished training
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 			Fold 1: Scoring trained pipeline
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 			Fold 1: R2 score: nan
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 			Fold 2: finished training
07/05/2023 09:33:48 AM - DEBUG - automl_search.py: 			Fold 2: Scoring trained pipeline
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 2: R2 score: nan
07/05/2023 09:33:49 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: nan
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: Adding results for pipeline XGBoost Regressor w/ Imputer
parameters {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'XGBoost Regressor': {'eta': 0.1, 'max_depth': 6, 'min_child_weight': 1, 'n_estimators': 100}}
evaluation_results {'cv_data': [{'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.005793527238040444), ('MAE', 0.07611522343158722), ('Root Mean Squared Error', 0.07611522343158722), ('# Training', 2), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.005982402241332319), ('MAE', 0.07734599046707152), ('Root Mean Squared Error', 0.07734599046707152), ('# Training', 2), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.0036792432251102833), ('MAE', 0.060656765699386606), ('Root Mean Squared Error', 0.060656765699386606), ('# Training', 2), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}], 'training_time': 0.7482876777648926, 'cv_scores': 0   NaN
1   NaN
2   NaN
dtype: float64, 'cv_score_mean': nan}
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: Adding results complete
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: Evaluating pipeline CatBoost Regressor w/ Imputer
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: Pipeline parameters: {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'CatBoost Regressor': {'n_estimators': 10, 'eta': 0.03, 'max_depth': 6, 'bootstrap_type': None, 'silent': False, 'allow_writing_files': False}}
07/05/2023 09:33:49 AM - INFO - logger.py: Batch 1: (5/6) CatBoost Regressor w/ Imputer            Elapsed:00:02
07/05/2023 09:33:49 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 0: finished training
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 0: Scoring trained pipeline
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 0: R2 score: nan
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 1: finished training
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 1: Scoring trained pipeline
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 1: R2 score: nan
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 2: finished training
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 2: Scoring trained pipeline
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 2: R2 score: nan
07/05/2023 09:33:49 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: nan
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: Adding results for pipeline CatBoost Regressor w/ Imputer
parameters {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'CatBoost Regressor': {'n_estimators': 10, 'eta': 0.03, 'max_depth': 6, 'bootstrap_type': None, 'silent': False, 'allow_writing_files': False}}
evaluation_results {'cv_data': [{'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.00048627924304759615), ('MAE', 0.022051740136497078), ('Root Mean Squared Error', 0.022051740136497078), ('# Training', 2), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.004887292072134617), ('MAE', 0.069909170157674), ('Root Mean Squared Error', 0.069909170157674), ('# Training', 2), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.0022352474982024113), ('MAE', 0.04727840414187445), ('Root Mean Squared Error', 0.04727840414187445), ('# Training', 2), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}], 'training_time': 0.29431796073913574, 'cv_scores': 0   NaN
1   NaN
2   NaN
dtype: float64, 'cv_score_mean': nan}
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: Adding results complete
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: Evaluating pipeline Random Forest Regressor w/ Imputer
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: Pipeline parameters: {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Random Forest Regressor': {'n_estimators': 100, 'max_depth': 6, 'n_jobs': -1}}
07/05/2023 09:33:49 AM - INFO - logger.py: Batch 1: (6/6) Random Forest Regressor w/ Imputer       Elapsed:00:02
07/05/2023 09:33:49 AM - INFO - automl_search.py: 	Starting cross validation
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 		Training and scoring on fold 0
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 0: starting training
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 0: finished training
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 0: Scoring trained pipeline
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 0: R2 score: nan
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 		Training and scoring on fold 1
07/05/2023 09:33:49 AM - DEBUG - automl_search.py: 			Fold 1: starting training
07/05/2023 09:33:50 AM - DEBUG - automl_search.py: 			Fold 1: finished training
07/05/2023 09:33:50 AM - DEBUG - automl_search.py: 			Fold 1: Scoring trained pipeline
07/05/2023 09:33:50 AM - DEBUG - automl_search.py: 			Fold 1: R2 score: nan
07/05/2023 09:33:50 AM - DEBUG - automl_search.py: 		Training and scoring on fold 2
07/05/2023 09:33:50 AM - DEBUG - automl_search.py: 			Fold 2: starting training
07/05/2023 09:33:50 AM - DEBUG - automl_search.py: 			Fold 2: finished training
07/05/2023 09:33:50 AM - DEBUG - automl_search.py: 			Fold 2: Scoring trained pipeline
07/05/2023 09:33:50 AM - DEBUG - automl_search.py: 			Fold 2: R2 score: nan
07/05/2023 09:33:50 AM - INFO - automl_search.py: 	Finished cross validation - mean R2: nan
07/05/2023 09:33:50 AM - DEBUG - automl_search.py: Adding results for pipeline Random Forest Regressor w/ Imputer
parameters {'Imputer': {'categorical_impute_strategy': 'most_frequent', 'numeric_impute_strategy': 'mean', 'categorical_fill_value': None, 'numeric_fill_value': None}, 'Random Forest Regressor': {'n_estimators': 100, 'max_depth': 6, 'n_jobs': -1}}
evaluation_results {'cv_data': [{'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.0015953633639999628), ('MAE', 0.03994199999999953), ('Root Mean Squared Error', 0.03994199999999953), ('# Training', 2), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.005451754896000051), ('MAE', 0.07383600000000035), ('Root Mean Squared Error', 0.07383600000000035), ('# Training', 2), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}, {'all_objective_scores': OrderedDict([('R2', nan), ('MSE', 0.0003587993639999837), ('MAE', 0.01894199999999957), ('Root Mean Squared Error', 0.01894199999999957), ('# Training', 2), ('# Testing', 1)]), 'score': nan, 'binary_classification_threshold': None}], 'training_time': 1.0818977355957031, 'cv_scores': 0   NaN
1   NaN
2   NaN
dtype: float64, 'cv_score_mean': nan}
07/05/2023 09:33:50 AM - DEBUG - automl_search.py: Adding results complete
07/05/2023 09:33:50 AM - INFO - automl_search.py: 
Search finished after 00:03            
07/05/2023 09:33:50 AM - INFO - automl_search.py: Best pipeline: Mean Baseline Regression Pipeline
07/05/2023 09:33:50 AM - INFO - automl_search.py: Best pipeline R2: nan
